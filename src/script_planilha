function doPost(e) {
  try {
    const data = JSON.parse(e.postData.contents);
    const acao = data.acao || 'pedido';
  

    if (acao === "pedido") return salvarPedido(data);
    if (acao === "cadastrar") return cadastrarCliente(data);
    if (acao === "login") return loginCliente(data);

    throw new Error('Ação inválida: ' + acao);
  } catch (err) {
    return ContentService.createTextOutput(JSON.stringify({ success: false, error: err.message }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}


function salvarPedido(data) {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Pedidos');
  
  if (!data.nome || !data.telefone || !Array.isArray(data.pedido)) {
    throw new Error('Dados incompletos ou formato incorreto.');
  }

  data.pedido.forEach(item => {
    sheet.appendRow([
      new Date(),
      data.nome,
      data.telefone,
      data.dataEntrega || '',
      data.endereco || '',      
      item.produto,
      item.quantidade,
      item.unidade
    ]);
  });

  return ContentService.createTextOutput(JSON.stringify({ success: true }))
    .setMimeType(ContentService.MimeType.JSON);
}

function cadastrarCliente(data) {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Clientes');

  if (!data.nome || !data.email || !data.senha) {
    throw new Error('Campos obrigatórios faltando. ');
  }

  const existing = sheet.getDataRange().getValues().find(row => row[2] === data.email);
  if (existing) throw new Error('Email já cadastrado');

  sheet.appendRow([
    new Date(),
    data.nome,
    data.email,
    data.senha,
    data.telefone,
    data.endereco
  ]);

  return ContentService.createTextOutput(JSON.stringify({ success: true }))
    .setMimeType(ContentService.MimeType.JSON);
}

function loginCliente(data) {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Clientes');
  const dados = sheet.getDataRange().getValues();

  for (let i = 1; i < dados.length; i++) {
    const row = dados[i];
    const [ , nome, email, senha, telefone, endereco ] = row;

    // Comparações seguras
    const emailPlanilha = String(email).trim().toLowerCase();
    const senhaPlanilha = String(senha).trim();
    const emailDigitado = String(data.email).trim().toLowerCase();
    const senhaDigitada = String(data.senha).trim();

    if (emailPlanilha === emailDigitado && senhaPlanilha === senhaDigitada) {
      return ContentService.createTextOutput(JSON.stringify({
        success: true,
        nome,
        telefone,
        endereco
      })).setMimeType(ContentService.MimeType.JSON);
    }
  }

  return ContentService.createTextOutput(JSON.stringify({
    success: false,
    error: 'Email ou senha inválidos'
  })).setMimeType(ContentService.MimeType.JSON);
}
